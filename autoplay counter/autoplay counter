import React, { useState, useEffect } from 'react';

const Counter = () => {
  const [count1, setCount1] = useState(0);
  const [count2, setCount2] = useState(0);

  const counter = (minimum, maximum, setCount) => {
    let intervalId;
    for (let i = minimum; i <= maximum; i++) {
      ((index) => {
        intervalId = setTimeout(() => {
          setCount(index);
        }, (index - minimum) * 80); // Decreased timeout duration to speed up animation
      })(i);
    }
    // Clear the interval after reaching the maximum value
    return intervalId;
  };

  useEffect(() => {
    const counter1Id = counter(0, 50, setCount1);
    const counter2Id = counter(0, 20, setCount2);
    // Clean up the intervals when component unmounts
    return () => {
      clearTimeout(counter1Id);
      clearTimeout(counter2Id);
    };
  }, []);

  return (
    <div>
      <div>
        <h1>Counter 1: {count1}</h1>
      </div>
      <div>
        <h1>Counter 2: {count2}</h1>
      </div>
    </div>
  );
};

export default Counter;